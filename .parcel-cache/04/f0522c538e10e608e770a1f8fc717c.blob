var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
_parcelHelpers.export(exports, "UserForm", function () {
  return UserForm;
});
class UserForm {
  constructor(parent) {
    this.parent = parent;
  }
  eventsMap() {
    return {
      'click:button': this.onButtonClick,
      'mouseover:h1': this.onHeaderHover
    };
  }
  onButtonClick() {
    console.log('button click');
  }
  onHeaderHover() {
    console.log('header hover');
  }
  template() {
    return `
        <div>
        <h1>User Form</h1>
        <input />
        <button>Click Me</button>
        </div>
      `;
  }
  bindEvents() {
    const allEvents = this.eventsMap();
    // Convert the objects in allEvents into an array of arrays of key-value pairs
    Object.entries(allEvents).forEach(eventComposite => {
      // split the 'click:button' syntax
      const [event, element] = eventComposite[0].split(':');
      // get a list of all "element"s
      document.querySelectorAll(element).forEach(ele => {
        // attach event listner to the event with the call back function
        ele.addEventListener(event, eventComposite[1]);
      });
    });
  }
  render() {
    this.parent.insertAdjacentHTML('afterbegin', this.template());
    this.bindEvents();
  }
}
